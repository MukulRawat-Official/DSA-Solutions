/*

   solution 1 :-
   
   calcuklate prefix sum for each row
   
   now for every query go from r1 -> r2 and calc prefix sum of each row

*/
class NumMatrix {
public:
    int sum = 0;
    vector<vector<int>>p;
    NumMatrix(vector<vector<int>>& arr) {
      int n  = arr.size();
      int m = arr[0].size();
        
      p.resize(n , vector<int>(m));
        
     for(int i=0;i<n;i++)
     p[i][0] = arr[i][0];
     
     for(int i=0;i<n;i++)
         for(int j = 1;j<m;j++)
           p[i][j] = p[i][j-1] + arr[i][j];
        
        // for(auto& i : p)
        // {
        //     for(auto& j : i)
        //         cout<<j<<" ";cout<<endl;}
    }
    
    int sumRegion(int r1, int c1, int r2, int c2) {
      
        int sum = 0;
        
        for(int i = r1;i<=r2;i++)
        {
            if(c1 == 0)
                sum +=p[i][c2];
            
            else
               sum+= (p[i][c2] - p[i][c1-1]);
        }
        
        
        return sum;
        
    }
};

/*

   Solution 2:-
   
   we calc prefix sum of rows and columns such that (i,j) point denote sum of all elements upto ij
   
   
   calc area between r1,r2,c1,c2
   
   ----------------------------------------
   |   .(r1-1,c1-1)|.(r1-1,c2)             |
   |    | -------- |                      |
   |    |          |                      |
   |____| -------- |
   |   .(r2,c1-1)  .(r2,c2)               |
   |
   |                                      |
   |
   |                                      |
   ----------------------------------------
   
   we'll substract Ar(r2,c2) - Ar(r2,c1-1) - Ar(r1-1,c2) + (r1-1,c1-1) -> since this area is substracted twice
  
   

*/

class NumMatrix {
public:
    int sum = 0;
    vector<vector<int>>p;
    NumMatrix(vector<vector<int>>& arr) {
      int n  = arr.size();
      int m = arr[0].size();
        
      p.resize(n , vector<int>(m));
        
     for(int i=0;i<n;i++)
     p[i][0] = arr[i][0];
     
     for(int i=0;i<n;i++)
         for(int j = 1;j<m;j++)
           p[i][j] = p[i][j-1] + arr[i][j];
        
     for(int i =1 ;i<n;i++)
         for(int j = 0;j<m;j++)
         p[i][j] += p[i-1][j];
        
//         for(auto& i : p){
//             for(auto& j : i)
//                 cout<<j<<" "; cout<<endl;}
         
    }
    
    int sumRegion(int r1, int c1, int r2, int c2) {
      
        int sum = 0;
        
        int total  = p[r2][c2];
        int sub = 0;
        
        if(c1)
        sub+= p[r2][c1-1];
        
        if(r1)
        sub+= p[r1-1][c2];
        
        if(r1 && c1)
        sub -= p[r1-1][c1-1];
        
        sum = total - sub;
        
        return sum;
        
    }
};
