/*

   dp solution o(n2) no longer accepted though
   here we'll sort according to width and and in dec oreder according to height and check 
   for previous output whether there is better choice available

*/

bool mycmp(vector<int>& a, vector<int>&b)
{
    if(a[0] == b[0])
        return b[1] >a[1];
    
    return a[0]<b[0];
}

class Solution {
public:
    int maxEnvelopes(vector<vector<int>>& e) {
        
        int n = e.size();
        
        vector<int>dp(n , 1);
        dp[0] = 1;
        
        sort(e.begin(),e.end(),mycmp);
        vector<vector<int>>s;
        s.push_back(e[0]);
        
        
        for(int i=1;i<n;i++)
        {
            
            
        }
        
        return ans;
        
    }
};
