/*
  probelem is easy move from starting station store all fuel in priority queue 
  whenever we need feed we look into priority queue and take best fuel 
  if we ran out of fuel we can' reach our desitnation else we'll return 
  total no of station - no of unused stations.
*/

class Solution {
public:
  
    int minRefuelStops(int target, int sfuel, vector<vector<int>>& st) {
     int currf = sfuel;
     int dist = 0;
     priority_queue<int>q;
        
     for(int i = 0;i<st.size();i++)
     {
         int req = st[i][0] - dist;

         
           while(q.size() &&  currf<req)
           {
              currf += q.top();
               q.pop();
           }
             
           if(currf<req) return -1;
            currf -= req;
         
         q.push(st[i][1]);
         dist = st[i][0];
     }
        
     int req = target - dist;
     while(q.size() && currf<req)
     {
         currf += q.top();
         q.pop();
     }
        
     if(currf<req) return -1;
     return st.size() - q.size();
         
    }
};
