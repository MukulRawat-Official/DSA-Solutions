/*

  the target is to make array increasing  :- 
  
  now we'll divide array into pieces
  
  case 1 : B>=A
          ---(A)
  ----(B)          (c)
  
  a.>  C >= B then we can make A = C
  b.>  C < B  then its best to make C = A
  
  
  case 2 : A<B

  we'll make A = B  and continue again with current iteration 


*/

class Solution {
public:
    bool checkPossibility(vector<int>& nums) {
        
        int n  = nums.size();
        if(n<=1)
            return true;
        
        int c = 0;
        
        for(int i =1;i<n-1;i++)
        {
           if(nums[i] >= nums[i-1] && nums[i+1] >= nums[i])
               continue;
            
            if(c)
                return false;
            
            else if(nums[i] >= nums[i-1])
            {
                c++;
                
                if(nums[i+1] >=nums[i-1])
                    nums[i] = nums[i+1];
                
                else 
                    nums[i+1] = nums[i];
            }
            
            else
            {
                c++;
                nums[i-1] = nums[i];
                i--;
            }
        }
        
        return true;
    }
};
