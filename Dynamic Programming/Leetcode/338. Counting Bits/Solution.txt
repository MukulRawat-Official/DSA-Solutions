/*
        0  , 1 , 01 , 11 , 100 , 101 , 110 , 111 ...
        
        note binary no form repetitive permuatation in 2^n form 
        
        bits will increase in form of ( arr[ i - factor] + 1) ;
        
        eg :
        2 -> factor[2 - 2] + 1 = 1; 
        3 -> factor[3-2] + 1 = 2  ;
        4-> factor[4 - 4] = 0 + 1 ; 
        factor[7 - 4] = factor[3] + 1 = 2 + 1 = 3 etc...
*/

class Solution {
public:
    vector<int> countBits(int n) {
        
        if(n==0)
            return {0};
        
        vector<int>arr(n+1,0);
        
    
        
        int factor = 1;
        
        for(int i = 1; i<=n; )
        {
           
            for(int j =1;j<=factor && i<=n ; j++)
            {
                arr[i] = arr[i-factor] + 1;
                i++;
            }
            
            factor *=2;
        }
        
        return arr;
    }
};
