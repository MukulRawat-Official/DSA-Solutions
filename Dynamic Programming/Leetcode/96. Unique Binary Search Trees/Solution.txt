/*
   for n == 1 we got one case
   for n == 2 we got  1(root)-2 , 2(root)-1
   for n == 3 we got  1(root) - (2,3)  , 1 - 2(root) - 3 , (1,2) - 3(root)
   
   point to note is that after we divide array no val don't matter only matter is no of node so we can provide recusive as well as dp sol
*/

class Solution {
public:
    int numTrees(int n) {
        
        if( n <= 2)
            return n;
        
        
       vector<int>dp(n+1,0);
        
        dp[0] = 1;
        dp[1] = 1;
        
        dp[2] = 2;
        
        for(int i = 3;i<=n;i++)
        {
             for(int j =1;j<=i;j++)
             {
                 int left = j-1 , right = i - j;
                 
                 dp[i] += (dp[left] * dp[right]);
             }
        }
        
        return dp[n];
    }
};
