class Solution {
public:
    map<string,int>m,vis;
    int ladderLength(string beginWord, string end, vector<string>& wordList) {
        
        for(auto& x : wordList)
        m[x] = 1;
        
        queue<pair<string,int>>q;
        q.push({beginWord,1});
        vis[beginWord]++;
        
        while(q.size())
        {
            string& s = q.front().first;
            int& val = q.front().second;
         
            if(s == end) return val;
            
            for(int i = 0;i<s.size();i++)
            {
                int curr = s[i];
                for(int j = 'a'; j<='z'; j++)
                {
                    s[i] = j;
                    if( m.count(s) && !vis.count(s))
                    {
                        vis[s] = 1;
                        q.push({s,val+1});
                    }
                }
                s[i] = curr;
            }
            q.pop();
        }
        
        return 0;
        
    }
};
