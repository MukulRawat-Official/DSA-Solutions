/*

since we need to find vairance which consist of only two elements

we can check 2 charcters at time.. for maximizing diff we can use kadane algorithm

note-> we'll take frequency variable as well to calc frequence of second element as both elements need to be one 

now we provided solution for from index 0 , we can also form substring starting from index n-1 , so we'll check for n-1 as well

*/

class Solution {
public:
    int largestVariance(string s) {
        
        int n = s.length();
        int ans  = 0 ;
        int count =2;
        
        while(count--)
        {
        for(char ch = 'a' ;ch<='z';ch++)
        {
            for(char c = 'a';c<='z';c++)
            {
                if(ch == c)
                    continue;
                
                int curr = 0;
                int x1 = 0,x2 = 0;
                    
                for(int i = 0;i<n;i++)
                {
                   if(s[i] == ch)
                   {
                       curr++;
                       x1++;
                   }
                   if(s[i] == c)
                   {
                       if(x1!=0 && x2!=0)
                       ans = max(curr,ans);
                       
                       curr--;
                       x2++;
                   }
                    
                    if(curr<0)
                    {curr=0; x1 =0;x2 = 0;}
               }
                
                if(x1 != 0 && x2!=0)
                ans = max(ans,curr);
                    
                
              
            }
        }
            
               reverse(s.begin(),s.end()); 
        }
        return ans;
    }
};
