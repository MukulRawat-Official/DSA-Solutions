
/*

1.> we need to get quickly sum over a range so we'll use prefix sum
2.> now for every index check what's maximum range we can go without violationg our answer
3.> now add that range in our answer
*/
class Solution {
public:
    long long countSubarrays(vector<int>& arr, long long k) {
      long long n = arr.size();
      vector<long long>p(n);
      p[0] = arr[0];
      
      for(int i=1;i<n;i++)
        p[i] = p[i-1] + arr[i];
        
      long  ans = 0;
        
     for(int i =0;i<n;i++)
     {
         int l = i , h = n-1;
         long sum = 0;
         
         while(l<=h)
         {
             int mid = (l+h)/2;
             
             if(i)
             sum = p[mid] - p[i-1];
             
             else
             sum = p[mid];
             
             // cout<<sum<<" ";
             
             if(sum * (mid-i+1) >= k)
                 h = mid-1;
             
             else
                 l = mid+1;
             
             // cout<<l<<" "<<h<<" ";
             
         }
         // cout<<endl;
         
         // cout<<l<<" "<< h<<" " <<h-i<<" "<<endl;
         
         if(h>=i)
         ans += (h - i + 1);
    }
        return ans;
        
    }
};
